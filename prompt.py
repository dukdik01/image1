st.header("üñºÔ∏è ‡∏ú‡∏™‡∏°‡∏†‡∏≤‡∏û (Blending Images)")

# ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà 1 ‡πÅ‡∏•‡∏∞‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà 2 ‡∏à‡∏≤‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
col1, col2 = st.columns(2)
with col1:
    img1_caption = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà 1", list(images.keys()), key="blend1")
with col2:
    img2_caption = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà 2", list(images.keys()), index=1, key="blend2")

# ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡πÄ‡∏î‡πà‡∏ô
dominant_caption = st.radio("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏π‡∏õ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡πÄ‡∏î‡πà‡∏ô", [img1_caption, img2_caption], index=0)

# ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏î‡πà‡∏ô (‡∏Ñ‡πà‡∏≤‡∏ú‡∏™‡∏°)
alpha = st.slider("‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏î‡πà‡∏ô (0.0 - 1.0)", 0.0, 1.0, 0.7, step=0.01)

# ‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û‡∏ó‡∏±‡πâ‡∏á‡∏™‡∏≠‡∏á
def load_image(url):
    response = requests.get(url)
    return Image.open(BytesIO(response.content)).convert("RGBA")

img1 = load_image(images[img1_caption])
img2 = load_image(images[img2_caption])

# ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡πÉ‡∏´‡πâ‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ô
common_size = (min(img1.width, img2.width), min(img1.height, img2.height))
img1 = img1.resize(common_size)
img2 = img2.resize(common_size)

# ‡∏ú‡∏™‡∏°‡∏†‡∏≤‡∏û
if dominant_caption == img1_caption:
    blended = Image.blend(img2, img1, alpha)  # img1 ‡πÄ‡∏î‡πà‡∏ô
else:
    blended = Image.blend(img1, img2, alpha)  # img2 ‡πÄ‡∏î‡πà‡∏ô

# ‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏ú‡∏™‡∏°
st.subheader("‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏ú‡∏™‡∏°‡πÅ‡∏•‡πâ‡∏ß")
st.image(blended, use_container_width=False)

with st.expander("‡∏î‡∏π‡∏†‡∏≤‡∏û‡∏ï‡πâ‡∏ô‡∏â‡∏ö‡∏±‡∏ö"):
    st.image(img1, caption=f"‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà 1: {img1_caption}", use_container_width=True)
    st.image(img2, caption=f"‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà 2: {img2_caption}", use_container_width=True)
