import streamlit as st
import requests
from PIL import Image, ImageOps
from io import BytesIO

# ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏£‡∏π‡∏õ‡πÉ‡∏´‡∏°‡πà
images = {
    "‡∏´‡∏°‡∏≤‡∏õ‡πà‡∏≤‡∏Å‡∏±‡∏ö‡∏õ‡∏±‡πä‡∏Å": "https://upload.wikimedia.org/wikipedia/commons/thumb/2/2f/Comparison_of_a_wolf_and_a_pug.png/250px-Comparison_of_a_wolf_and_a_pug.png",
    "‡πÅ‡∏°‡∏ß": "https://upload.wikimedia.org/wikipedia/commons/thumb/6/68/Orange_tabby_cat_sitting_on_fallen_leaves-Hisashi-01A.jpg/800px-Orange_tabby_cat_sitting_on_fallen_leaves-Hisashi-01A.jpg",
    "‡∏ô‡∏Å‡∏Æ‡∏π‡∏Å": "https://upload.wikimedia.org/wikipedia/commons/thumb/0/07/Chouettes.jpg/250px-Chouettes.jpg"
}

# ‡πÄ‡∏Å‡πá‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
if "selected_image_url" not in st.session_state:
    st.session_state.selected_image_url = None
if "selected_caption" not in st.session_state:
    st.session_state.selected_caption = ""
if "original_image" not in st.session_state:
    st.session_state.original_image = None
if "resized_image" not in st.session_state:
    st.session_state.resized_image = None

st.title("‡πÅ‡∏Å‡∏•‡πÄ‡∏•‡∏≠‡∏£‡∏µ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û")

if not st.session_state.selected_image_url:
    cols = st.columns(3)
    for idx, (caption, url) in enumerate(images.items()):
        with cols[idx]:
            st.image(url, caption=caption, use_container_width=True)
            if st.button(f"‡∏î‡∏π‡∏†‡∏≤‡∏û: {caption}", key=caption):
                st.session_state.selected_image_url = url
                st.session_state.selected_caption = caption
                response = requests.get(url)
                img = Image.open(BytesIO(response.content))
                st.session_state.original_image = img
                st.session_state.resized_image = img
else:
    st.subheader(f"‡∏†‡∏≤‡∏û: {st.session_state.selected_caption}")
    img = st.session_state.resized_image

    width = st.slider("‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á (px)", 50, 1000, img.width)
    height = st.slider("‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á (px)", 50, 1000, img.height)
    resized_img = st.session_state.original_image.resize((width, height))
    st.session_state.resized_image = resized_img

    # ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡∏Å‡∏•‡∏±‡∏ö‡∏†‡∏≤‡∏û
    flip_option = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡∏Å‡∏•‡∏±‡∏ö‡∏†‡∏≤‡∏û", ["None", "Horizontal", "Vertical"])
    if flip_option == "Horizontal":
        flipped_img = ImageOps.mirror(resized_img)
    elif flip_option == "Vertical":
        flipped_img = ImageOps.flip(resized_img)
    else:
        flipped_img = resized_img

    st.image(flipped_img, caption=f"{st.session_state.selected_caption} ({width}x{height})", use_container_width=False)

    col1, col2 = st.columns(2)
    with col1:
        if st.button("üîÑ ‡∏£‡∏µ‡πÄ‡∏ã‡∏ï‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û"):
            st.session_state.resized_image = st.session_state.original_image
    with col2:
        if st.button("üîô ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏£‡∏π‡∏õ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"):
            st.session_state.selected_image_url = None
            st.session_state.selected_caption = ""
            st.session_state.original_image = None
            st.session_state.resized_image = None
